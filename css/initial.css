/*
THIS CSS file was used for the first three sections of the course, before we moved to SASS

COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/


/*
the following selects does a reset: selects every element, and sets properties to 0 value
 */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit; /* every element will inherit box-sizing from the body, which is defined as border-box */
}

html {
    font-size: 62.5%; /* 10 in order to simplify calculations relative to this: 1rem = 10px, 2rem = 20px ... */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /*font-size: 16px;*/
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.3),
        rgba(40, 180, 133, 0.3)
    ), url("../img/hero.jpg");
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%);
    position: relative;
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, 50%);
    text-align: center;
}

.heading-primary {
    color: #FFF;
    text-transform:uppercase;
    backface-visibility: hidden; /* fixes the shake that comes at the end of animation */
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-delay: 0s; /* defines after how many seconds the animation is played */
    animation-iteration-count: 1; /* defines how many times the animation occurs, default is 1 */
    animation-timing-function: ease-out;
}
.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.8rem;

    animation: moveInRight 1.5s ease-out;
 }

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(2rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-2rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited{
    font-size: 1.6rem;
    display: inline-block;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    transition: all 0.2s; /* animation has to be defined in the initial state*/
    position: relative; /* setting this to relative so that the btn::after pseudo-element can be positioned relative to this element,
    instead of relative to the header element which is the first one after this that can be found */
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.3);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, 0.3);

}

.btn--white{
    background-color: white;
    color: #777777;
}

.btn::after {
    /* the pseudo element is treated like a child of the button */
    content: ""; /* for a pseudo element to appear we have to specify the content property, even if it's empty content*/
    display: inline-block; /* we also have to specify a display prop, which in this case is the same like the display of the btn */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s ease-out;
}

.btn--white::after {
    background-color: white;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /* automatically apply the styles of the 0% before the animation starts */
}

